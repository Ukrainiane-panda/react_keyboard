{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","keyName","addEventKeyUp","e","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAOaA,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,QAAS,IAHb,EAcEC,cAAgB,SAACC,GACXA,EAAEC,KACJ,EAAKC,SAAS,CAAEL,YAAY,EAAMC,QAASE,EAAEC,OAhBnD,uDAME,WACEE,SAASC,iBAAiB,QAASC,KAAKN,iBAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,iBAX/C,oBAoBE,WACE,MAAgCM,KAAKT,MAA7BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,QAEpB,OACE,qBAAKS,UAAU,MAAf,SACIV,EAEE,mBAAGU,UAAU,eAAb,4CAAyDT,EAAzD,OADA,mBAAGS,UAAU,eAAb,2CA1BZ,GAAyBC,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.b5b2160b.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: boolean,\n  keyName: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: false,\n    keyName: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.addEventKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.addEventKeyUp);\n  }\n\n  addEventKeyUp = (e: KeyboardEvent) => {\n    if (e.key) {\n      this.setState({ pressedKey: true, keyName: e.key });\n    }\n  };\n\n  render() {\n    const { pressedKey, keyName } = this.state;\n\n    return (\n      <div className=\"App\">\n        {!pressedKey\n          ? <p className=\"App__message\">Nothing was pressed yet</p>\n          : <p className=\"App__message\">{`The last pressed key is [${keyName}]`}</p>}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}